//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace Render3D.com.xara.ws {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'binding' from namespace 'http://schemas.microsoft.com/soap-toolkit/wsdl-extension' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RenderServer3DSoapBinding", Namespace="http://soap.xara.com/wsdl/")]
    public partial class RenderServer3D : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RenderURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFontsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExportTypesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RenderServer3D() {
            this.Url = global::Render3D.Properties.Settings.Default.Render3D_com_xara_ws_RenderServer3D;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RenderURLCompletedEventHandler RenderURLCompleted;
        
        /// <remarks/>
        public event GetTemplatesCompletedEventHandler GetTemplatesCompleted;
        
        /// <remarks/>
        public event GetFontsCompletedEventHandler GetFontsCompleted;
        
        /// <remarks/>
        public event GetExportTypesCompletedEventHandler GetExportTypesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.RenderURL", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("URL")]
        public string RenderURL(string Template, string Text, string TextColor, string BGColor, string Font, string FontSize, string ExportType, out long Width, out long Height) {
            object[] results = this.Invoke("RenderURL", new object[] {
                        Template,
                        Text,
                        TextColor,
                        BGColor,
                        Font,
                        FontSize,
                        ExportType});
            Width = ((long)(results[1]));
            Height = ((long)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenderURLAsync(string Template, string Text, string TextColor, string BGColor, string Font, string FontSize, string ExportType) {
            this.RenderURLAsync(Template, Text, TextColor, BGColor, Font, FontSize, ExportType, null);
        }
        
        /// <remarks/>
        public void RenderURLAsync(string Template, string Text, string TextColor, string BGColor, string Font, string FontSize, string ExportType, object userState) {
            if ((this.RenderURLOperationCompleted == null)) {
                this.RenderURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenderURLOperationCompleted);
            }
            this.InvokeAsync("RenderURL", new object[] {
                        Template,
                        Text,
                        TextColor,
                        BGColor,
                        Font,
                        FontSize,
                        ExportType}, this.RenderURLOperationCompleted, userState);
        }
        
        private void OnRenderURLOperationCompleted(object arg) {
            if ((this.RenderURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenderURLCompleted(this, new RenderURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetTemplates", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Templates")]
        public object[] GetTemplates() {
            object[] results = this.Invoke("GetTemplates", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTemplatesAsync() {
            this.GetTemplatesAsync(null);
        }
        
        /// <remarks/>
        public void GetTemplatesAsync(object userState) {
            if ((this.GetTemplatesOperationCompleted == null)) {
                this.GetTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetTemplates", new object[0], this.GetTemplatesOperationCompleted, userState);
        }
        
        private void OnGetTemplatesOperationCompleted(object arg) {
            if ((this.GetTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTemplatesCompleted(this, new GetTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetFonts", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Fonts")]
        public object[] GetFonts() {
            object[] results = this.Invoke("GetFonts", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFontsAsync() {
            this.GetFontsAsync(null);
        }
        
        /// <remarks/>
        public void GetFontsAsync(object userState) {
            if ((this.GetFontsOperationCompleted == null)) {
                this.GetFontsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFontsOperationCompleted);
            }
            this.InvokeAsync("GetFonts", new object[0], this.GetFontsOperationCompleted, userState);
        }
        
        private void OnGetFontsOperationCompleted(object arg) {
            if ((this.GetFontsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFontsCompleted(this, new GetFontsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetExportTypes", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("ExportTypes")]
        public object[] GetExportTypes() {
            object[] results = this.Invoke("GetExportTypes", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExportTypesAsync() {
            this.GetExportTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetExportTypesAsync(object userState) {
            if ((this.GetExportTypesOperationCompleted == null)) {
                this.GetExportTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExportTypesOperationCompleted);
            }
            this.InvokeAsync("GetExportTypes", new object[0], this.GetExportTypesOperationCompleted, userState);
        }
        
        private void OnGetExportTypesOperationCompleted(object arg) {
            if ((this.GetExportTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExportTypesCompleted(this, new GetExportTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RenderURLCompletedEventHandler(object sender, RenderURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenderURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenderURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long Width {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long Height {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTemplatesCompletedEventHandler(object sender, GetTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFontsCompletedEventHandler(object sender, GetFontsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFontsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFontsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetExportTypesCompletedEventHandler(object sender, GetExportTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExportTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExportTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591